.. title: Markdown vs ReST vs OneMoreMarkupLanguage
.. slug: markdown-vs-rest-vs-onemoremarkuplanguage
.. date: 2013/04/02 11:27:23
.. tags: блог, разработка
.. link: 
.. description: о том как лёгким движением руки обычный текст в html превращается


Сегодняшнее повествование о способах разметки простого текстового документа, который чуть позже превратится в полноценный html.
Вдохновлён содержанием статьи `"Why Markdown Is Not My Favourite Language" <http://www.wilfred.me.uk/blog/2012/07/30/why-markdown-is-not-my-favourite-language/>`_.

Markdown
--------

Итак, первым и наиболее распространённым в гиковском мире является **Markdown**. Всё бы с ним было хорошо - и выглядит замечательно как 
с точки зрения транслятора в html, так и с точки зрения рядового разработчика, который фигачит очередной ман к проекту в старом добром emacs (ну или новом модном sublime text 2/3). Однако, родовые травмы и тут присутствуют.

Во-первых, каждый уважающий себя сервис - будь он гитхабом или стек оверфлоу - почему то решает, что надо свой диалект создать. И ведь пишут, чем вносят сумятицу в мир
тех, кто только-только погружается в тему. Человек набирается знаний, который при переходе в очередное маркдаун-ориентед проект не пригодятся по большей части.

.. image:: http://imgs.xkcd.com/comics/standards.png

Во-вторых, из-за возможности вставить в текст маркдаун документа чистый html, который парсер будет бездумно вставлять в конечный документ, появляется потенциальная
дыра в безопасности. И html приходится как-то валидировать, выкидывать всё ненужное. Опять же теряется вся семантика документа. Встаёт закономерный вопрос - почему так?
Статья `Wilfred Hughes <http://www.wilfred.me.uk/blog/2012/07/30/why-markdown-is-not-my-favourite-language/>`_ содержит ряд примеров. Не будем копи-пастить.

В частности его напрягают:

- то как форматируются списки в сочетании со вставками кода
- ограниченный функционал (ссылки автоматически не распознаются)
- системы плагинов поддерживаются не всеми парсерами (а плагины потенциально решают ряд проблем)
- изначально таблицы не поддерживаются нативно (приходится внедрять html)

Как же быть?

ReStructuredText
----------------
Эволюцией мардкауна принято считать разработку питонистов, которая значительно дополнила и расширила его, привнеся своеобразный оттенок Latex. Именно на её основе
и готовятся посты для этого блога. Штука с одной стороны очень простая в использовании, с другой стороны без чтения оригинального мана иногда непонятно куда коней 
запрягать. Вот этот диалект я использую и вполне счастлив: `A reStructuredText Reference <http://nikola.ralsina.com.ar/quickref.html>`_. Насколько я понял это форк
оригинального языка разработки автором движка блога Nikola.

Ещё большей радостью для меня явилась поддержка плагинов, который дают возможность быстро вставить gist, видео с youtube и vimeo. Опять же автор оригинальной статьи
находит ряд раздражающих мелочей:

- там где в мардауне надо ставить одну \` тут зачастую приходится ставить две
- подчёркивание заголовков строго ограничено знаками - и =, причём длина подчёркивания должна быть не меньше длины заголовка
- отстутствие javascript парсера и вывод ошибок трансляции прямо в конечный текст - вот это действительно печалит

Creole
------
Как панацею от всех бед автор предлагает `Creole <http://wikicreole.org/>`_ - некий общий знаменатель синтаксисов крупнейших вики движков (MediaWiki, MoinMoin).
В качестве аргументов за утверждается, что проект быстро эволюционирует, лёгок для усвоения и испытан в разных окружениях. Также есть реализация для фронтенда на 
JavaScript, что позволяет организовать полноценный предпросмотр в реальном времени. В базовом составе есть: ссылки, заголовки, сниппеты кода, таблицы и картинки.
Довольно неплохо для большинства случаев. 

Думаю, что прежде чем судить, надо попробовать. Но закрадывается смутное сомнение на тот факт, что последний проект привлёк автора тем, что проект быстро развивается.
А как отмечал `Бобук <http://addmeto.cc>`_ , это то, что многие(все?) гики очень любят. На себе могу сказать - любим, но после персональной проверки.

Вывод
-----
Чем бы гик не тешился, лишь бы мыться не забывал. Каждый выбирает разметку под свои задачи и вкусы. Наличие разнообразия и то, что парсеры это опен сорс проекты
даёт возможность любому посвященному написать/дописать свой. Дерзайте, друзья. А я пойду `вояшу <http://voyanga.com>`_ попилю )

